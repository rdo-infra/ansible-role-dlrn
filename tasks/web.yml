- name: Install required packages (Python 3)
  ansible.builtin.package:
    name:
      - httpd
      - python3-mod_wsgi
    state: present

- name: Deploy mod_ssl
  ansible.builtin.package:
    name: mod_ssl
  when: enable_https

- name: Deploy ssl.conf file
  ansible.builtin.copy:
    src: ssl.conf
    dest: /etc/httpd/conf.d/ssl.conf
    mode: '0644'
  when: enable_https

- name: Create /var/www/html/images directory
  ansible.builtin.file:
    path: /var/www/html/images
    state: directory
    mode: '0755'

- name: Deploy RDO logo
  ansible.builtin.copy:
    src: web/rdo-logo-white.png
    dest: /var/www/html/images/rdo-logo-white.png
    mode: '0644'

- name: Deploy home page
  ansible.builtin.copy:
    src: web/index.html
    dest: /var/www/html/index.html
    mode: '0644'

- name: Remove cron job to run update-web-index, if present
  ansible.builtin.cron:
    name: update-web-index
    user: root
    state: absent

- name: Start httpd service
  ansible.builtin.service:
    name: httpd
    state: started
    enabled: true

- name: Request SSL certficate
  when:
    - enable_https
    - dlrn_manage_letsencrypt | default(false)
  block:
    - name: Prepare facts for task
      ansible.builtin.set_fact:
        ssl_cert_options:
          cert1:
            email: "{{ cert_mail | default('softwarefactory-operations-team@redhat.com') }}"
            domain: "{{ web_domain }}"
            webroot: "/var/www/html"
        certbot_plugin: "--webroot"

    - name: Run SSL certificate request
      ansible.builtin.include_tasks: ssl.yml

- name: Deploy vhost for port 80
  ansible.builtin.template:
    src: vhost_80.j2
    dest: "/etc/httpd/conf.d/25-{{ web_domain }}.conf"
    owner: root
    group: root
    mode: '0644'
  notify: Restart httpd

- name: Deploy vhost for port 443
  ansible.builtin.template:
    src: vhost_443.j2
    dest: "/etc/httpd/conf.d/25-ssl-{{ web_domain }}.conf"
    owner: root
    group: root
    mode: '0644'
  when: enable_https
  notify: Restart httpd

- name: Deploy httpd.conf file
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: "/etc/httpd/conf/httpd.conf"
    owner: root
    group: root
    mode: '0644'
  notify: Restart httpd

- name: Allow long file names in autoindex.conf
  ansible.builtin.lineinfile:
    path: /etc/httpd/conf.d/autoindex.conf
    regexp: '^IndexOptions'
    line: "IndexOptions FancyIndexing HTMLTable VersionSort NameWidth=* DescriptionWidth=* Charset=UTF-8"
  notify: Restart httpd

- name: Check if keytab for API exists
  ansible.builtin.stat:
    path: "{{ api_keytab }}"
  register: api_keytab_file
  when: api_keytab is defined

- name: Change API keytab permission
  ansible.builtin.file:
    path: "{{ api_keytab }}"
    state: file
    owner: root
    group: root
    mode: "0744"
  when:
    - api_keytab is defined
    - api_keytab_file.stat.exists
  become: true

- name: Check if http keytab for API exists
  ansible.builtin.stat:
    path: "{{ http_api_keytab }}"
  register: http_api_keytab_file
  when: http_api_keytab is defined

- name: Change http keytab permission
  ansible.builtin.file:
    path: "{{ http_api_keytab }}"
    state: file
    owner: root
    group: root
    mode: "0744"
  when:
    - http_api_keytab is defined
    - http_api_keytab_file.stat.exists
  become: true
