[DEFAULT]
datadir=/home/{{ worker.key }}/data
scriptsdir=/home/{{ worker.key }}/dlrn/scripts
templatedir=/home/{{ worker.key }}/dlrn/dlrn/templates
baseurl={{ worker.value.baseurl | default('http://localhost') }}
distro={{ worker.value.distgit_branch | default('rpm-master') }}
source={{ worker.value.distro_branch | default('master') }}
target={{ worker.value.target }}
reponame=delorean
project_name={{ worker.value.project_name | default('RDO') }}
tags={{ worker.value.release | default('rocky') }}
workers={{ worker.value.worker_processes | default(1) }}
{% if worker.value.rsyncdest is defined %}rsyncdest={{ worker.value.rsyncdest }}
{% endif %}
{% if worker.value.rsyncport is defined %}rsyncport={{ worker.value.rsyncport }}
{% endif %}
{% if worker.value.gerrit_user is defined %}
gerrit=yes
gerrit_topic={{ worker.value.gerrit_topic | default('rdo-FTBFS') }}
{% endif %}
smtpserver=
pkginfo_driver={{ worker.value.pkginfo_driver | default('dlrn.drivers.rdoinfo.RdoInfoDriver') }}
build_driver={{ worker.value.build_driver | default('dlrn.drivers.mockdriver.MockBuildDriver') }}
database_connection={{ worker.value.db_connection | default('sqlite:///commits.sqlite') }}
fallback_to_master={{ worker.value.fallback_to_master | default(True) }}
include_srpm_in_repo={{ worker.value.include_srpm_in_repo | default(True) }}
nonfallback_branches={{ worker.value.nonfallback_branches | default('^master$,^rpm-master$') }}
{% if worker.value.custom_preprocess is defined %}
custom_preprocess={{ worker.value.custom_preprocess | default('') }}
{% endif %}
allow_force_rechecks={{ worker.value.allow_force_rechecks | default(False) }}
keep_changelog={{ worker.value.keep_changelog | default(False) }}
use_components={{ worker.value.use_components | default(False) }}
release_numbering={{ worker.value.release_numbering | default('0.date.hash') }}
release_minor={{ worker.value.release_minor | default('0') }}
{% if worker.value.pkginfo_driver | default('dlrn.drivers.rdoinfo.RdoInfoDriver') == 'dlrn.drivers.gitrepo.GitRepoDriver' %}
[gitrepo_driver]
repo={{ worker.value.gitrepo_repo | default('http://github.com/openstack/rpm-packaging') }}
directory={{ worker.value.gitrepo_dir | default('/openstack') }}
skip={{ worker.value.gitrepo_skip | default(['openstack-macros']) | join(',') }}
use_version_from_spec={{ worker.value.gitrepo_use_version_from_spec | default(True) }}
{% elif worker.value.pkginfo_driver | default('dlrn.drivers.rdoinfo.RdoInfoDriver') == 'dlrn.drivers.downstream.DownstreamInfoDriver' %}
[downstream_driver]
{% if worker.value.downstream_distroinfo_repo is defined %}repo={{ worker.value.downstream_distroinfo_repo | default('') }}
{% endif %}
{% if worker.value.downstream_info_files is defined %}info_files={{ worker.value.downstream_info_files | default('') }}
{% endif %}
{% if worker.value.downstream_versions_url is defined %}
versions_url={{ worker.value.downstream_versions_url | default('') }}
{% endif %}
{% if worker.value.downstream_distro_branch is defined %}
downstream_distro_branch={{ worker.value.downstream_distro_branch | default('') }}
{% endif %}
{% if worker.value.downstream_tag is defined %}
downstream_tag={{ worker.value.downstream_tag | default('') }}
{% endif %}
{% if worker.value.downstream_distgit_key is defined %}
downstream_distgit_key={{ worker.value.downstream_distgit_key | default('') }}
{% endif %}
use_upstream_spec={{ worker.value.use_upstream_spec | default(False) }}
{% if worker.value.downstream_spec_replace_list is defined %}
downstream_spec_replace_list={{ worker.value.downstream_spec_replace_list | default('') }}
{% endif %}
{% if worker.value.downstream_source_git_key is defined %}
downstream_source_git_key={{ worker.value.downstream_source_git_key | default('') }}
{% endif %}
{% if worker.value.downstream_source_git_branch is defined %}
downstream_source_git_branch={{ worker.value.downstream_source_git_branch | default('') }}
{% endif %}
{% elif worker.value.pkginfo_driver | default('dlrn.drivers.rdoinfo.RdoInfoDriver') == 'dlrn.drivers.rdoinfo.RdoInfoDriver' %}
[rdoinfo_driver]
{% if worker.value.rdoinfo_repo is defined %}
repo={{ worker.value.rdoinfo_repo }}
{% endif %}
{% if worker.value.rdoinfo_info_files is defined %}
info_files={{ worker.value.rdoinfo_info_files }}
{% endif %}
{% if worker.value.rdoinfo_cache_dir is defined %}
cache_dir={{ worker.value.rdoinfo_cache_dir }}
{% endif %}
{% endif %}

{% if worker.value.build_driver | default('dlrn.drivers.mockdriver.MockBuildDriver') == 'dlrn.drivers.kojidriver.KojiBuildDriver' %}
[kojibuild_driver]
koji_exe={{ worker.value.koji_exe | default('koji') }}
{% if worker.value.koji_krb_principal is defined %}
krb_principal={{ worker.value.koji_krb_principal | default('') }}
{% endif %}
krb_keytab={{ worker.value.koji_krb_keytab | default('koji') }}
scratch_build={{ worker.value.koji_scratch_builds | default(True) }}
{% if worker.value.koji_build_target is defined %}
build_target={{ worker.value.koji_build_target | default('') }}
{% endif %}
arch={{ worker.value.koji_arch | default('x86_64') }}
fetch_mock_config={{ worker.value.koji_fetch_mock_config | default(False) }}
use_rhpkg={{ worker.value.koji_use_rhpkg | default(False) }}
{% if worker.value.koji_mock_base_packages is defined %}
mock_base_packages={{ worker.value.koji_mock_base_packages | default('') }}
{% endif %}
{% if worker.value.koji_mock_package_manager is defined %}
mock_package_manager={{ worker.value.koji_mock_package_manager }}
{% endif %}
{% if worker.value.additional_koji_tags is defined %}
additional_koji_tags={{ worker.value.additional_koji_tags | default('') }}
{% endif %}
{% endif %}
